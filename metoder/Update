@Override
	public void updateEmployee(Employee employee) {
		Connection conn = database.take();
		PreparedStatement statement;
		try {
			statement = conn.prepareStatement("UPDATE employees SET lastName = ?, firstName = ?, extension = ?, email = ?, officeCode = ? , reportsTo = ?, jobTitle = ? WHERE employeeNumber = ?");

			statement.setString(1, employee.getLastName());
			statement.setString(2, employee.getFirstName());
			statement.setString(3, employee.getExtension());
			statement.setString(4, employee.getEmail());
			statement.setString(5, employee.getOfficeCode());
			statement.setInt(6, employee.getReportsTo());
			statement.setString(7, employee.getjobTitle());
			statement.setInt(8,employee.getEmployeeNumber());

			statement.executeQuery();
			database.give(conn);

		} catch (SQLException throwables) {
			throwables.printStackTrace();
		}

		database.give(conn);

	}
	
	@Override
	public void updateCustomer(Customer customer) {
		Connection conn = database.take();
		PreparedStatement statement;
		try {
			statement = conn.prepareStatement("UPDATE customers SET customerName = ?, contactLastName = ?, contactFirstName = ?, phone = ?, adressLine1 = ? , adressLine2 = ? , city = ? , state = ? , postalCode = ? , country = ? , salesRepEmployeeNumber = ? , creditLimit = ? WHERE customerNumber = ?");

			statement.setString(1, customer.getcustomerName());
			statement.setString(2, customer.getcontactLastName());
			statement.setString(3, customer.getcontactFirstName());
			statement.setString(4, customer.getphone());
			statement.setString(5, customer.getadressLine1());
			statement.setString(6, customer.getadressLine2());
			statement.setString(7, customer.getcity());
			statement.setString(8, customer.getstate());
			statement.setString(9, customer.getpostalCode());
			statement.setString(10, customer.getcountry());
			statement.setInt(11, customer.getsalesRepEmployeeNumber());
			statement.setDouble(12, customer.getcreditLimit());

			statement.executeQuery();
			database.give(conn);

		} catch (SQLException throwables) {
			throwables.printStackTrace();
		}

		database.give(conn);

	}
	
		@Override
	public void updateOrder(Order order) {
		Connection conn = database.take();
		PreparedStatement statement;
		try {
			statement = conn.prepareStatement("UPDATE orders SET orderDate = ?, requiredDate = ?, shippedDate = ?, status = ?, comments = ? , customerNumber = ? WHERE orderNumber = ?");

			statement.setInt(1, order.orderNumber());
			statement.setDate(2, order.getorderDate());
			statement.setDate(3, order.getrequiredDate());
			statement.setDate(4, order.getshippedDate());
			statement.setString(5, order.getstatus());
			statement.setString(6, order.getcomments());
			statement.setInt(7,order.getcustomerNumber());


			statement.executeQuery();
			database.give(conn);

		} catch (SQLException throwables) {
			throwables.printStackTrace();
		}

		database.give(conn);

	}
	
